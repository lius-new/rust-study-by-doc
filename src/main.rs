fn main() {
    // 复合数据类型(原生的复合类型: 元组类型和数组)

    // 元组类型
    // 可以将不同数据类型的变量组合成复合类型.

    // 元组类型通过(,,,)来创建一个元组,其中每个变量都对应一个数据类型
    // (i32,i32,chat) = (1,2,'3')
    let tup = (1, 2, '3');

    // 如果要获取元组中的值可以使用模式匹配来解构元组
    //  if this is intentional, prefix it with an underscore, 如果变量的值未被使用,建议变量名前面加上_
    let (x, y, z) = tup;

    // 通过`.索引`来访问元组中的值
    println!("{} {} {}", tup.0, tup.1, tup.2);

    // () 表示不带任何值的元组,可以称为单元. 表示空值或空的返回类型
    // 如果表达式不返回任何其他值,那么就会隐式的返回单元值
    let f = test();

}

fn test() {}
